<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace controllers;

use base\controller\controlador_base;
use gamboamartin\errores\errores;
use html\directivas;
use html\directivas\cat_sat_tipo_persona_html;
use JsonException;
use models\cat_sat_tipo_persona;
use PDO;
use stdClass;

class controlador_cat_sat_tipo_persona extends controlador_base {

    public function __construct(PDO $link, stdClass $paths_conf = new stdClass()){
        $modelo = new cat_sat_tipo_persona(link: $link);
        $this->msj_con_html = false;
        parent::__construct(link: $link,modelo:  $modelo, paths_conf: $paths_conf);

        $mensaje_exito = (new directivas())->mensaje_exito(controler: $this);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar alerta', data: $mensaje_exito);
            var_dump($error);
            die('Error');
        }

        $mensaje_warning = (new directivas())->mensaje_warning(controler: $this);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar alerta', data: $mensaje_warning);
            var_dump($error);
            die('Error');
        }

    }

    /**
     * Genera la lista mostrable en la accion de cat_sat_tipo_persona / lista
     * @version 0.5.0
     * @param bool $header if header se ejecuta en html
     * @param bool $ws retorna webservice
     * @return array
     */
    public function lista(bool $header, bool $ws = false): array
    {
        $cat_sat_tipos_persona = $this->modelo->registros(return_obj: true);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al obtener registros',
                data:  $cat_sat_tipos_persona, header: $header, ws: $ws);
        }

        $this->registros = $cat_sat_tipos_persona;
        $this->titulo_lista = 'Tipos persona';

        $n_registros = count($cat_sat_tipos_persona);
        $this->n_registros = $n_registros;

        return $this->registros;
    }

    public function modifica(bool $header, bool $ws = false, string $breadcrumbs = '',
                             bool $aplica_form = true, bool $muestra_btn = true): array|string
    {

        if($this->registro_id<=0){
            return $this->retorno_error(mensaje: 'Error registro_id debe ser mayor a 0', data: $this->registro_id,
                header:  $header, ws: $ws);
        }

        $r_modifica = parent::modifica(header: false, breadcrumbs: $breadcrumbs,aplica_form:  $aplica_form,
            muestra_btn: $muestra_btn); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al obtener template', data: $r_modifica,
                header:  $header, ws: $ws);
        }

        $inputs = (new cat_sat_tipo_persona_html($this))->modifica();
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar inputs', data: $inputs,
                header:  $header, ws: $ws);
        }

        $button_valida_persona_fisica = (new directivas())->button_href_valida_persona_fisica(controler:$this);
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar boton', data: $button_valida_persona_fisica,
                header:  $header, ws: $ws);
        }
        $this->inputs->valida_persona_fisica = $button_valida_persona_fisica;

        $button_status = (new directivas())->button_href_status(controler:$this,seccion: 'cat_sat_tipo_persona');
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar boton', data: $button_valida_persona_fisica,
                header:  $header, ws: $ws);
        }
        $this->inputs->status = $button_status;
        return $r_modifica;
    }

    public function modifica_bd(bool $header, bool $ws): array|stdClass
    {
        $this->link->beginTransaction();
        $r_modifica_bd = parent::modifica_bd(false, false); // TODO: Change the autogenerated stub
        if(errores::$error){
            $this->link->rollBack();
            return $this->retorno_error(mensaje: 'Error al modificar registro', data: $r_modifica_bd,header:  $header, ws: $ws);
        }
        $this->link->commit();
        $_SESSION[$r_modifica_bd->salida][]['mensaje'] = $r_modifica_bd->mensaje.' del id '.$this->registro_id;
        $this->header_out(result: $r_modifica_bd, header: $header,ws:  $ws);

        return $r_modifica_bd;
    }

    public function opciones(bool $header, bool $ws){

    }

    /**
     * @throws JsonException
     */
    public function valida_persona_fisica(bool $header, bool $ws): array|stdClass
    {
        $this->link->beginTransaction();
        $upd = $this->modelo->status('valida_persona_fisica', $this->registro_id);
        if(errores::$error){
            $this->link->rollBack();
            return $this->retorno_error(mensaje: 'Error al modificar registro', data: $upd,header:  $header, ws: $ws);
        }
        $this->link->commit();
        $_SESSION['exito'][]['mensaje'] = 'Se ajusto el estatus de manera el registro con el id '.$this->registro_id;

        $this->header_out(result: $upd, header: $header,ws:  $ws);
        return $upd;

    }


}
